// THIS FILE IS AUTOGENERATED DO NOT EDIT BY HAND
using System;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.Drawing;
using Mutagen.Bethesda.Skyrim;
using Spriggan.Converters.Base;
using Microsoft.Extensions.DependencyInjection;

public class IArmorGetter_Converter : JsonConverter<IArmorGetter>
{
  public override IArmorGetter Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
  {
    throw new NotImplementedException();
  }
  public override void Write(Utf8JsonWriter writer, IArmorGetter value, JsonSerializerOptions options)
  {
    writer.WriteStartObject();
    writer.WriteString("FormKey", value.FormKey.ModKey.FileName + ":" + value.FormKey.ID.ToString("x8") + ":Armor");
    
    // AlternateBlockMaterial
    writer.WritePropertyName("AlternateBlockMaterial");
    if (value.AlternateBlockMaterial.IsNull)
      writer.WriteNullValue();
    else
      writer.WriteStringValue(value.AlternateBlockMaterial.FormKey.ModKey.FileName + ":" + value.AlternateBlockMaterial.FormKey.ID.ToString("x8"));
    
    // Armature
    writer.WritePropertyName("Armature");
    writer.WriteStartArray();
    foreach(var itm in value.Armature)
    {
      writer.WriteStringValue(itm.FormKey.ModKey.FileName + ":" + itm.FormKey.ID.ToString("x8"));
    }
    writer.WriteEndArray();
    
    // ArmorRating
    writer.WritePropertyName("ArmorRating");
    writer.WriteNumberValue(value.ArmorRating);
    
    // BashImpactDataSet
    writer.WritePropertyName("BashImpactDataSet");
    if (value.BashImpactDataSet.IsNull)
      writer.WriteNullValue();
    else
      writer.WriteStringValue(value.BashImpactDataSet.FormKey.ModKey.FileName + ":" + value.BashImpactDataSet.FormKey.ID.ToString("x8"));
    
    // BodyTemplate
    writer.WritePropertyName("BodyTemplate");
    writer.WriteStartObject();
    
    // FirstPersonFlags
    writer.WritePropertyName("FirstPersonFlags");
    writer.WriteEnum(value.BodyTemplate.FirstPersonFlags);
    
    // Flags
    writer.WritePropertyName("Flags");
    writer.WriteEnum(value.BodyTemplate.Flags);
    
    // ArmorType
    writer.WritePropertyName("ArmorType");
    writer.WriteEnumValue(value.BodyTemplate.ArmorType);
    
    // ActsLike44
    writer.WritePropertyName("ActsLike44");
    writer.WriteBooleanValue(value.BodyTemplate.ActsLike44);
    writer.WriteEndObject();
    writer.WriteEndObject();
  }
}
public static class GeneratedConvertersExtensions
{
  public static IServiceCollection UseConverters(this IServiceCollection services)
  {
    services.AddSingleton<JsonConverter, IArmorGetter_Converter>();
    return services;
  }
}
