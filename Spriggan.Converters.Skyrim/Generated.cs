// THIS FILE IS AUTOGENERATED DO NOT EDIT BY HAND
using System;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.Drawing;
using Mutagen.Bethesda.Skyrim;
using Spriggan.Converters.Base;
using Mutagen.Bethesda;
using Microsoft.Extensions.DependencyInjection;

public class IArmorGetter_Converter : JsonConverter<IArmorGetter>
{
  public override IArmorGetter Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
  {
    throw new NotImplementedException();
  }
  public override void Write(Utf8JsonWriter writer, IArmorGetter value, JsonSerializerOptions options)
  {
    writer.WriteStartObject();
    writer.WriteFormKeyHeader(value, options);
    
    // AlternateBlockMaterial
    writer.WritePropertyName("AlternateBlockMaterial");
    if (value.AlternateBlockMaterial.IsNull)
      writer.WriteNullValue();
    else
      writer.WriteStringValue(value.AlternateBlockMaterial.FormKey.ModKey.Name + ":" + value.AlternateBlockMaterial.FormKey.ModKey.Type + ":" + value.AlternateBlockMaterial.FormKey.ID.ToString("x8"));
    
    // Armature
    writer.WritePropertyName("Armature");
    writer.WriteStartArray();
    foreach(var itm in value.Armature)
    {
      writer.WriteStringValue(itm.FormKey.ToString());
    }
    writer.WriteEndArray();
    writer.WriteEndObject();
  }
}
public class Armor_Converter : JsonConverter<Mutagen.Bethesda.Skyrim.Armor>
{
  private IArmorGetter_Converter _getterConverter;
  public Armor_Converter()
  {
    _getterConverter = new IArmorGetter_Converter();
  }
  public override void Write(Utf8JsonWriter writer, Mutagen.Bethesda.Skyrim.Armor value, JsonSerializerOptions options)
  {
    _getterConverter.Write(writer, (IArmorGetter)value, options);
  }
  public override Mutagen.Bethesda.Skyrim.Armor Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
  {
    if (reader.TokenType != JsonTokenType.StartObject)
        throw new JsonException();
    reader.Read();
    var retval = new Mutagen.Bethesda.Skyrim.Armor(SerializerExtensions.ReadFormKeyHeader(ref reader, options), SkyrimRelease.SkyrimSE);
    while (true)
    {
      reader.Read();
      if (reader.TokenType == JsonTokenType.EndObject)
      {
        reader.Read();
        break;
      }
      var prop = reader.GetString();
      reader.Read();
      switch (prop)
      {
        case "AlternateBlockMaterial":
          if (reader.TokenType != JsonTokenType.Null)
            retval.AlternateBlockMaterial.SetTo(SerializerExtensions.ReadFormKeyValue(ref reader, options));
          break;
        case "Armature":
          if (reader.TokenType != JsonTokenType.StartArray)
            throw new JsonException();
          while (true)
          {
            reader.Read();
            if (reader.TokenType == JsonTokenType.EndArray)
              break;
            retval.Armature.Add(SerializerExtensions.ReadFormKeyValue(ref reader, options));
          }
          break;
        default:
            reader.Skip();
            break;
      }
    }
    return retval;
  }
}
public static class GeneratedConvertersExtensions
{
  public static IServiceCollection UseConverters(this IServiceCollection services)
  {
    services.AddSingleton<JsonConverter, IArmorGetter_Converter>();
    services.AddSingleton<JsonConverter, Armor_Converter>();
    return services;
  }
}
